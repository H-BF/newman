apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-api-tests
  namespace: {{ .Release.Namespace }}
  labels:
    name: {{ .Release.Name }}-api-tests
spec:
  backoffLimit: 0
  template:
    spec:
      initContainers:
        {{- with .Values.postgres }}
        - name: wait-db
          image: {{ .image.repository }}:{{ .image.tag }}
          imagePullPolicy: {{ .image.pullPolicy }}
          {{- with .securityContext | default $.Values.defaults.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command: ["sh", "/tmp/wait-db.sh"]
          volumeMounts:
            - name: {{ $.Release.Name }}-wait-db
              mountPath: /tmp
          env:
          - name: POSTGRES_USER
            value: {{ .user }} 
          - name: POSTGRES_PASSWORD
            value: {{ .pwd }}
          - name: HBF_HOST
            value: {{ $.Release.Name }}-hbf-server
        {{- end }}
      containers:
        {{- with .Values.newman }}
        - name: api-tests
          image: {{ .image.repository }}:{{ .image.tag }}
          imagePullPolicy: {{ .image.pullPolicy }}
          env:
            - name: HBF_HOST
              value: {{ $.Release.Name }}-hbf-server
            - name: REPORTER_HOST
              value: {{ .reporter.host }}
            - name: REPORTER_PORT
              value: "{{ .reporter.port | toString }}"
            - name: REPORTER_PROTOCOL
              value: {{ .reporter.protocol }}
            - name: CI_PIPELINE_ID
              value: "{{ $.Values.gitlab.pipelineID | toString }}"
            - name: CI_JOB_ID
              value: "{{ $.Values.gitlab.jobID | toString }}"              
            - name: CI_SOURCE_BRANCH_NAME
              value: {{ $.Values.gitlab.src_branch }}
            - name: CI_TARGET_BRANCH_NAME
              value: {{ $.Values.gitlab.dst_branch }}
            - name: COMMIT
              value: {{ $.Values.gitlab.commit }}              
            - name: TG_TOKEN
              value: {{ $.Values.telegram.token }}
            - name: TG_GROUP_ID
              value: "{{ $.Values.telegram.group_id | toString }}"
            - name: HBF_TAG
              value: {{ $.Values.HBFServer.image.tag }}
            - name: POSTGRES_USER
              value: {{ $.Values.postgres.user }}
            - name: POSTGRES_PASSWORD
              value: {{ $.Values.postgres.pwd }}            
            - name: POSTGRES_HOST
              value: {{ $.Release.Name }}-hbf-server
            - name: POSTGRES_PORT
              value: "{{ $.Values.postgres.ports.addressPort | toString }}"
            - name: POSTGRES_DB
              value: {{ $.Values.postgres.db }}
        {{- end }}
      restartPolicy: Never
      volumes:
        - name: {{ .Release.Name }}-wait-db
          configMap:
            name: {{ .Release.Name }}-wait-db